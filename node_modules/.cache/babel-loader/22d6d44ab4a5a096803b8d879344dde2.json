{"ast":null,"code":"var t = require(\"react\");\n\nfunction n(t, n) {\n  for (var r in n) t[r] = n[r];\n\n  return t;\n}\n\nvar r = {\n  store: function () {}\n},\n    o = function (n) {\n  function r() {\n    n.apply(this, arguments);\n  }\n\n  return n && (r.__proto__ = n), (r.prototype = Object.create(n && n.prototype)).constructor = r, r.prototype.getChildContext = function () {\n    return {\n      store: this.props.store\n    };\n  }, r.prototype.render = function () {\n    return t.Children.only(this.props.children);\n  }, r;\n}(t.Component);\n\no.childContextTypes = r, exports.connect = function (o, e) {\n  var i;\n  return \"function\" != typeof o && (\"string\" == typeof (i = o || []) && (i = i.split(/\\s*,\\s*/)), o = function (t) {\n    for (var n = {}, r = 0; r < i.length; r++) n[i[r]] = t[i[r]];\n\n    return n;\n  }), function (i) {\n    function c(r, c) {\n      var p = this;\n      t.Component.call(this, r, c);\n\n      var u = c.store,\n          s = o(u ? u.getState() : {}, r),\n          f = e ? function (t, n) {\n        \"function\" == typeof t && (t = t(n));\n        var r = {};\n\n        for (var o in t) r[o] = n.action(t[o]);\n\n        return r;\n      }(e, u) : {\n        store: u\n      },\n          a = function () {\n        var t = o(u ? u.getState() : {}, r);\n\n        for (var n in t) if (t[n] !== s[n]) return s = t, p.forceUpdate();\n\n        for (var e in s) if (!(e in t)) return s = t, p.forceUpdate();\n      };\n\n      this.componentWillReceiveProps = function (t) {\n        r = t, a();\n      }, this.componentDidMount = function () {\n        u.subscribe(a);\n      }, this.componentWillUnmount = function () {\n        u.unsubscribe(a);\n      }, this.render = function () {\n        return t.createElement(i, n(n(n({}, f), p.props), s));\n      };\n    }\n\n    return c.contextTypes = r, (c.prototype = Object.create(t.Component.prototype)).constructor = c;\n  };\n}, exports.Provider = o;","map":null,"metadata":{},"sourceType":"script"}